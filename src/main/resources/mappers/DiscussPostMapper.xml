<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.liu.nkcommunity.mapper.DiscussPostMapper">

    <sql id="selectFields">
        id,user_id,title,content,type,status,create_time,comment_count,score
    </sql>

    <sql id="insertFields">
        user_id,title,content,type,status,create_time,comment_count,score
    </sql>

    <!-- 讨论贴的状态不是2，然后按照type，创建时间进行倒序，然后分页，跳过前offset条数据，显示limit条数据 -->
    <select id="selectDiscussPosts" resultType="DiscussPost">
        select
        <include refid="selectFields"></include>
        from discuss_post
        where status != 2
        <if test="userId != 0">
            and user_id = #{userId}
        </if>
        <if test="orderMode == 0">
            order by type desc, create_time desc
        </if>
        <if test="orderMode == 1">
            order by type desc, score desc, create_time desc
        </if>
        limit #{offset}, #{limit}
    </select>

    <!-- 查询所有的数据行数   -->
    <select id="selectDiscussPostRows" resultType="int">
        select count(*)
        from discuss_post
        where status != 2
        <if test="userId != 0">
            and user_id = #{userId}
        </if>
    </select>

    <!-- 发表/添加讨论贴   -->
    <insert id="insertDiscussPost" parameterType="com.liu.nkcommunity.domain.DiscussPost" keyProperty="id">
        insert into discuss_post(<include refid="insertFields"></include>)
        values(#{userId},#{title},#{content},#{type},#{status},#{createTime},#{commentCount},#{score})
    </insert>

    <!--  根据id查询帖子的详情  -->
    <select id="findDiscussPostById" resultType="DiscussPost">
        select
            <include refid="selectFields"></include>
        from discuss_post
        where id = #{id}
    </select>

    <update id="updateCommentCount">
        update discuss_post set comment_count = #{commentCount} where id = #{id}
    </update>

    <update id="updateScore">
        update discuss_post set score = #{score} where id = #{id}
    </update>


</mapper>
